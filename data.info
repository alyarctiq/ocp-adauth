# 05_Active_Directory_Integration
Integration with Active Directory requires the following components:
- AD/LDAP authentication configuration on each master
- AD/LDAP synchronization configuration
- AD/LDAP whitelist file
- Cron job for regular synchronization intervals

#### AD/LDAP Integration
- Create the AD/LDAP configuration stanza on each master and restart services
```
cat <<EOF > ldap.yaml
---
- hosts: masters
  tasks:
  - name: Remove htpasswd provider on masters and restart
    replace:
      path: /etc/origin/master/master-config.yaml
      regexp: '(?s)(?<=  identityProviders:\n).*?(?=  masterCA)'
      replace: ''
      backup: yes
  - name: Add AD configuration to masters and restart
    blockinfile:
      dest: /etc/origin/master/master-config.yaml
      marker: "# {mark} ANSIBLE MANAGED ACTIVE DIRECTORY BLOCK #"
      insertafter: ' identityProviders:'
      block: |2
          - name: "Active Directory - <NAME>"
            challenge: true
            login: true
            mappingMethod: add
            provider:
              apiVersion: v1
              kind: LDAPPasswordIdentityProvider
              attributes:
               id:
               - sAMAccountName
               - cn
              bindDN: "<BIND DN HERE>"
              bindPassword: "<BIND PASSWD>"
              insecure: true
              url: "ldap://"
      backup: yes
      state: present
  - name: restart controller service
    service:
      name: atomic-openshift-master-controllers
      state: restarted
  - name: restart api service
    service:
      name: atomic-openshift-master-api
      state: restarted
EOF

ansible-playbook -i node_list ldap.yaml
```


- Create the following AD/LDAP synchronization file
```
cat << EOF > ldap-sync-config.yaml
kind: LDAPSyncConfig
apiVersion: v1
groupUIDNameMapping:
  "CN=": openshift_admins
  "CN=": openshift_users
url: ldap://:389
bindDN: "CN="
bindPassword: ""
insecure: true
rfc2307:
    groupsQuery:
        baseDN: "OU="
        scope: sub
        derefAliases: never
        pageSize: 10000
        filter: (objectClass=*)
    groupUIDAttribute: dn
    groupNameAttributes: [ cn ]
    groupMembershipAttributes: [ member ]
    usersQuery:
        baseDN: "CN="
        scope: sub
        derefAliases: never
        pageSize: 10000
    userUIDAttribute: dn
    userNameAttributes: [ sAMAccountName ]
    tolerateMemberNotFoundErrors: false
    tolerateMemberOutOfScopeErrors: false
EOF
```
- Create the AD/LDAP whitelist
```
cat << EOF > ldap_whitelist
CN=
CN=
EOF
```

- Run a synchronization job
```
oadm groups sync --sync-config=/root/ldap-sync-config.yaml  --whitelist=/root/ldap_whitelist --confirm

root@cb1avocpmn01 ~]# oadm groups sync --sync-config=/root/ldap-sync-config.yaml  --whitelist=/root/ldap_whitelist --confirm
group/openshift_admins
group/openshift_users
#

```

#### Run AD/LDAP Synchronization as a Cron Job
- Create the AD/LDAP sync shell script and make executable
```
mkdir /home/ocpadmin/scripts
cat <<EOF > /home/ocpadmin/scripts/ldap_sync.sh
#!/bin/bash
/bin/oc login -u system:admin
/bin/oadm groups sync --sync-config=/home/ocpadmin/ansible_install/ldap-sync-config.yaml  --whitelist=/home/ocpadmin/ansible_install/ldap_whitelist --confirm
EOF

chmod +x /home/ocpadmin/scripts/ldap_sync.sh
```

- Add to crontab of the root user on 2 master nodes with offset schedules
  - Node 1
```
sudo crontab -e
# HEADER: This file was autogenerated at 2017-07-25 09:54:00 -0400 by puppet.
# HEADER: While it can still be managed manually, it is definitely not recommended.
# HEADER: Note particularly that the comments starting with 'Puppet Name' should
# HEADER: not be deleted, as doing so could cause duplicate cron jobs.
# Puppet Name: pe-mcollective-metadatai
0,30 * * * * /home/ocpadmin/scripts/ldap_sync.sh  2>&1
```
  - Node 2
```
sudo crontab -e
# HEADER: This file was autogenerated at 2017-07-25 09:54:00 -0400 by puppet.
# HEADER: While it can still be managed manually, it is definitely not recommended.
# HEADER: Note particularly that the comments starting with 'Puppet Name' should
# HEADER: not be deleted, as doing so could cause duplicate cron jobs.
# Puppet Name: pe-mcollective-metadatai
15,45 * * * * /home/ocpadmin/scripts/ldap_sync.sh  2>&1
```


#### AD Group Permissions
Self-provisioning of projects for regular users has been disabled, but
projecte admins can create projects and assign users to the necessary projects.
The current groups and permissions are as follows:
- openshift_uat_admin: cluster admin privileges
- openshift_project_admins_uat: self provisioning capabilities and project admin
- openshift_all_users_uat: users can log in and participate in projects

```
oadm policy add-cluster-role-to-group cluster-admin openshift_admins
oadm policy remove-cluster-role-from-group self-provisioner system:authenticated system:authenticated:oauth
oadm policy add-cluster-role-to-group self-provisioner openshift_users

# oadm policy add-cluster-role-to-group admin openshift_admins
cluster role "admin" added: "openshift_admins"

# oadm policy add-cluster-role-to-group cluster-admin openshift_admins
cluster role "cluster-admin" added: "openshift_admins"

# oadm policy remove-cluster-role-from-group self-provisioner system:authenticated system:authenticated:oauth
cluster role "self-provisioner" removed: ["system:authenticated" "system:authenticated:oauth"]

# oadm policy add-cluster-role-to-group self-provisioner openshift_users
cluster role "self-provisioner" added: "openshift_users"
#

```
